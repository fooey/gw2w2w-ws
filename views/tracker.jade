extends layout


block content
	#tracker
		.container
			section.row.totalScores
				each world, worldIndex in [match.redWorld, match.blueWorld, match.greenWorld]
					+writeWorldScore(world, worldIndex)

		.container
			section.row: div.col-md-12: div.row.row-gutterless.objectives
				-var mapNum = 0;
				div.col-md-3
					+witeObjectiveGroup('Center', mapNum++)
				div.col-md-9
					div.row.row-gutterless
						div.col-md-4
							+witeObjectiveGroup('RedHome', mapNum++)
						div.col-md-4
							+witeObjectiveGroup('BlueHome', mapNum++)
						div.col-md-4
							+witeObjectiveGroup('GreenHome', mapNum++)
					div.row.row-gutterless: div.col-md-12
						+writeLog()





block worldLinks
	each world, worldIndex in [match.redWorld, match.blueWorld, match.greenWorld]
		-var team = ['red', 'blue', 'green'][worldIndex];
		-var liClass = ['team', team];
		-var aClass = ['team', team];
		if world[urlLang].slug == urlSlug
			-liClass.push('active')
		li(class=liClass)
			a(class=aClass, href=world.link)
				= world[urlLang].name


block bodyClose
	script.
		$(function(){subscribeToUpdates('match#{match.id}');});
		serverTimeOffset = #{Math.floor(Date.now() / 1000)} - Math.floor(Date.now() / 1000);
	script(src="/data/state-" + match.id + ".js")




// scoreboard
mixin writeWorldScore(world, worldIndex)
	-var team = ['red', 'blue', 'green'][worldIndex];
	-var scoreClass = ['team-score', 'well', 'team', team];
	div.col-md-4: div(class=scoreClass)
		h2.text-center= world[urlLang].name
		h3.score.text-center(data-score=matchDetails.scores[worldIndex])= matchDetails.scoresFormatted[worldIndex]


// objectives tracker
mixin witeObjectiveGroup(objectiveGroupName, mapNum)
	-var objectiveGroup = objectiveGroups[objectiveGroupName];
	-var className = ['map'];
	section(class=className, title=objectiveGroupName, id="map-" + objectiveGroupName.toLowerCase())
		h4.map-name= matchDetails.mapNames[mapNum]
		each section, sectionName in objectiveGroup
			+witeObjectiveSection(section, sectionName)


mixin witeObjectiveSection (section, sectionName)
	-var className = [section.groupClass, 'objectives-group']
	div(class=className, title=sectionName)
		//-h5= sectionName
		ul.list-unstyled
			each objectiveId in section.objectives
				+writeObjective(objectiveId)


mixin writeObjective (objectiveId)
	-var objective = objectives[objectiveId];
	-var state = objectiveState[objectiveId];
	-var objectiveType = objectiveTypes[objective.type];
	-var liClass = ['objective', 'team', state.owner.color.toLowerCase(), 'clearfix'];
	li(id="objective-" + objectiveId, class=liClass, data-lastcaptured=state.owner.timestamp)
		span(class=['sprite', state.owner.color.toLowerCase(), objectiveType.type])
		span.objective-name= objective.commonNames[urlLang]
		if(state.guild.id)
			span(class='guild-' + state.guild.id)
		if(objectiveType.timer)
			span.timer



// log
mixin writeLog
	section#log
		+writeLogTabs()
		#logEntries: table
			each entry, ixEntry in journal
				+writeLogEntry(entry, ixEntry)

mixin writeLogTabs
	ul#logtabs.nav.nav-tabs.small
		li.active: a(data-mapname='All')= "All Maps"
		each map, mapIndex in matchDetails.mapNames
			-var mapName = ['Center', 'RedHome', 'BlueHome', 'GreenHome'][mapIndex]
			li: a(data-mapname=mapName)= map

mixin writeLogEntry(entry, ixEntry)
	-var color = ((entry.color) ? entry.color : objectiveState[entry.objective.id].owner.color).toLowerCase();
	-var objectiveType = objectiveTypes[entry.objective.type];
	tr(class=['logEntry', 'team', color, entry.mapName, (ixEntry % 2) ? 'alt' : ''], data-timestamp=entry.timestamp, data-mapname=entry.mapName, data-objectiveid=entry.objective.id)
		td.timestamp
		td.mapName= entry.mapName
		td: span(class=['sprite', color.toLowerCase(), objectiveType.type])
		td= entry.objective.commonNames[urlLang]
		td(width="100%")
			if(entry.type === 'owner')
				= entry.color
			if(entry.type === 'claimer')
				= entry.guildId

